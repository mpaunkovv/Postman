{
	"info": {
		"_postman_id": "6f2cf6ee-9eae-4d33-9532-521369aa1bb6",
		"name": "GitHub_API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25648550"
	},
	"item": [
		{
			"name": "Issues",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "GET_Single_Issue",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check issue number\", function() {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.number, \"Number property\").to.be.equal(2);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.github.com/repos/mpaunkovv/Postman/issues/2",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"repos",
										"mpaunkovv",
										"Postman",
										"issues",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET_Single_Issue_Labels",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    console.log(\"RESPONSE: \", pm.response);\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.github.com/repos/mpaunkovv/Postman/issues/1_labels",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"repos",
										"mpaunkovv",
										"Postman",
										"issues",
										"1_labels"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET_All_Issues",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check if response is an array of issues\" , function () {\r",
											"    const body = pm.response.json();\r",
											"    console.log(\"BODY\" , body);\r",
											"    pm.expect(Array.isArray(body));\r",
											"\r",
											"    for(let item of body) {\r",
											"        pm.expect(typeof(item.title)).equals(\"string\");\r",
											"        pm.expect(typeof(item.number)).equal(\"number\");\r",
											"        pm.expect(item.number, \"Issue number property\").is.greaterThan(0);\r",
											"    }\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.github.com/repos/mpaunkovv/Postman/issues",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"repos",
										"mpaunkovv",
										"Postman",
										"issues"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "POST",
					"item": [
						{
							"name": "Create_Issue",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check issue number and title\") , function () {\r",
											"    let body = pm.response.json();\r",
											"    pm.expect(body.number, \"Number property\").greaterThan(0);\r",
											"    pm.expect(body.title, \"Title property \").equal(\"Issue from Postman\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "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",
											"type": "string"
										},
										{
											"key": "username",
											"value": "mpaunkovv",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"Issue from Postman\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.github.com/repos/mpaunkovv/Postman/issues",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"repos",
										"mpaunkovv",
										"Postman",
										"issues"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create_Issue_With_Labels",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "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",
											"type": "string"
										},
										{
											"key": "username",
											"value": "mpaunkovv",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"Issue with labels\" , \r\n    \"labels\": [\"bug\" , \"critical \"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.github.com/repos/mpaunkovv/Postman/issues",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"repos",
										"mpaunkovv",
										"Postman",
										"issues"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create_Invalid_Issue",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "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",
											"type": "string"
										},
										{
											"key": "username",
											"value": "mpaunkovv",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title1\": \"Forth issue\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.github.com/repos/mpaunkovv/Postman/issues",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"repos",
										"mpaunkovv",
										"Postman",
										"issues"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Repos",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "GET_All_Repos",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.github.com/users/mpaunkovv/repos",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"users",
										"mpaunkovv",
										"repos"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET_Repo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											" pm.test(\"Check repo name\" , function() {\r",
											"     const body = pm.response.json();\r",
											"     pm.expect(body.name , \"Name propery\").equals(\"Postman\");\r",
											"\r",
											" })"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.github.com/repos/mpaunkovv/Postman",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"repos",
										"mpaunkovv",
										"Postman"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}